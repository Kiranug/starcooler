name: CI/CD Pipeline-dev

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  ACR_NAME: kiranacrdevops # Replace with your ACR name
  AKS_CLUSTER_NAME: dev-aks-cluster # Replace with your AKS cluster name
  RESOURCE_GROUP: infra-rg # Replace with your resource group
  APP_NAME: "windows-app"
  APP_VERSION: "latest"
  KEY_VAULT_NAME: starwinappkey # Replace with your Key Vault name

jobs:
  build-and-push:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ env.APP_VERSION }} .
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ env.APP_VERSION }}

  deploy:
    runs-on: windows-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}

      - name: Replace variables in Kubernetes manifests
        run: |
          sed -i "s|<ACR_NAME>|${{ env.ACR_NAME }}|g" kubernetes/deployment.yaml
          sed -i "s|<APP_VERSION>|${{ env.APP_VERSION }}|g" kubernetes/deployment.yaml
          sed -i "s|<KEY_VAULT_NAME>|${{ env.KEY_VAULT_NAME }}|g" kubernetes/secret-provider-class.yaml

      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/ingress.yaml
          kubectl apply -f kubernetes/pvc.yaml
          kubectl apply -f kubernetes/secret-provider-class.yaml
          kubectl apply -f kubernetes/secret.yaml

      - name: Verify deployment
        run: |
          kubectl get pods
          kubectl get svc
          kubectl get ingress
